package com.xignite.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * Provide real-time currency foreign exchange information and calculations.
 *         
 *
 * This class was generated by Apache CXF 3.5.2
 * 2023-10-09T11:00:48.355+03:00
 * Generated source version: 3.5.2
 *
 */
@WebServiceClient(name = "XigniteCurrencies",
                  wsdlLocation = "file:/Users/dmitru4ok/Desktop/SOA/DemoSOA/src/main/resources/currency.wsdl",
                  targetNamespace = "http://www.xignite.com/services/")
public class XigniteCurrencies extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.xignite.com/services/", "XigniteCurrencies");
    public final static QName XigniteCurrenciesHttpGet = new QName("http://www.xignite.com/services/", "XigniteCurrenciesHttpGet");
    public final static QName XigniteCurrenciesHttpPost = new QName("http://www.xignite.com/services/", "XigniteCurrenciesHttpPost");
    public final static QName XigniteCurrenciesSoap = new QName("http://www.xignite.com/services/", "XigniteCurrenciesSoap");
    public final static QName XigniteCurrenciesSoap12 = new QName("http://www.xignite.com/services/", "XigniteCurrenciesSoap12");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/dmitru4ok/Desktop/SOA/DemoSOA/src/main/resources/currency.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(XigniteCurrencies.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/dmitru4ok/Desktop/SOA/DemoSOA/src/main/resources/currency.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public XigniteCurrencies(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public XigniteCurrencies(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XigniteCurrencies() {
        super(WSDL_LOCATION, SERVICE);
    }

    public XigniteCurrencies(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public XigniteCurrencies(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public XigniteCurrencies(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns XigniteCurrenciesHttpGet
     */
    @WebEndpoint(name = "XigniteCurrenciesHttpGet")
    public XigniteCurrenciesHttpGet getXigniteCurrenciesHttpGet() {
        return super.getPort(XigniteCurrenciesHttpGet, XigniteCurrenciesHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XigniteCurrenciesHttpGet
     */
    @WebEndpoint(name = "XigniteCurrenciesHttpGet")
    public XigniteCurrenciesHttpGet getXigniteCurrenciesHttpGet(WebServiceFeature... features) {
        return super.getPort(XigniteCurrenciesHttpGet, XigniteCurrenciesHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns XigniteCurrenciesHttpPost
     */
    @WebEndpoint(name = "XigniteCurrenciesHttpPost")
    public XigniteCurrenciesHttpPost getXigniteCurrenciesHttpPost() {
        return super.getPort(XigniteCurrenciesHttpPost, XigniteCurrenciesHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XigniteCurrenciesHttpPost
     */
    @WebEndpoint(name = "XigniteCurrenciesHttpPost")
    public XigniteCurrenciesHttpPost getXigniteCurrenciesHttpPost(WebServiceFeature... features) {
        return super.getPort(XigniteCurrenciesHttpPost, XigniteCurrenciesHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns XigniteCurrenciesSoap
     */
    @WebEndpoint(name = "XigniteCurrenciesSoap")
    public XigniteCurrenciesSoap getXigniteCurrenciesSoap() {
        return super.getPort(XigniteCurrenciesSoap, XigniteCurrenciesSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XigniteCurrenciesSoap
     */
    @WebEndpoint(name = "XigniteCurrenciesSoap")
    public XigniteCurrenciesSoap getXigniteCurrenciesSoap(WebServiceFeature... features) {
        return super.getPort(XigniteCurrenciesSoap, XigniteCurrenciesSoap.class, features);
    }


    /**
     *
     * @return
     *     returns XigniteCurrenciesSoap
     */
    @WebEndpoint(name = "XigniteCurrenciesSoap12")
    public XigniteCurrenciesSoap getXigniteCurrenciesSoap12() {
        return super.getPort(XigniteCurrenciesSoap12, XigniteCurrenciesSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XigniteCurrenciesSoap
     */
    @WebEndpoint(name = "XigniteCurrenciesSoap12")
    public XigniteCurrenciesSoap getXigniteCurrenciesSoap12(WebServiceFeature... features) {
        return super.getPort(XigniteCurrenciesSoap12, XigniteCurrenciesSoap.class, features);
    }

}
